# Production Docker Compose configuration
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  backend:
    build: ./backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./data/pkm.db
      - CHROMA_DB_PATH=./data/chroma_db
      - RAG_STORAGE_DIR=./data/rag_storage
    volumes:
      - backend_data:/app/data
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build: ./backend
    restart: unless-stopped
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./data/pkm.db
      - CHROMA_DB_PATH=./data/chroma_db
      - RAG_STORAGE_DIR=./data/rag_storage
    volumes:
      - backend_data:/app/data
    depends_on:
      - redis
      - backend

  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  redis_data:
  backend_data: